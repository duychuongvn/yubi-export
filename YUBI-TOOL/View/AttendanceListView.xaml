<UserControl x:Class="YUBI_TOOL.View.AttendanceListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:interaction="http://schemas.microsoft.com/expression/2010/interactions" 
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
             xmlns:conv="clr-namespace:YUBI_TOOL.Model.Converter"
             xmlns:local="clr-namespace:YUBI_TOOL.Common"
             mc:Ignorable="d"  Style="{StaticResource resChildWindow}"
             d:DesignHeight="740" d:DesignWidth="1000">
    <UserControl.Resources>
        <conv:DateTimeConverter x:Key="dateTimeConverter"></conv:DateTimeConverter>
        <conv:WorkTimeConverter x:Key="workTimeConverter"></conv:WorkTimeConverter>
        <Style x:Key="resBaseDataGrid" BasedOn="{StaticResource resBaseDataGrid}" TargetType="DataGrid">
            <Style.Resources>
                <Style TargetType="{x:Type ScrollBar}">
                    <Setter Property="Margin" Value="0,-45,0,0"/>
                    <Style.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="Margin" Value="-480,0,0,0"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="resGridTextBoxTime" TargetType="TextBox">
            <Setter Property="MaxLength" Value="5"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="local:InputPattern.TextPattern" Value="(\d+:\d)|(\d+)"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsOutOfExpiration}" Value="True">
                    <Setter Property="Background" Value="#A9A9A9"></Setter>
                    <Setter Property="BorderBrush" Value="#A9A9A9"></Setter>
                    <Setter Property="Foreground" Value="Black"></Setter>
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="resTextBoxLeft" TargetType="TextBox">
            <Setter Property="MaxLength" Value="250"></Setter>
            <Setter Property="TextAlignment" Value="Left"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="local:InputPattern.TextPattern" Value=""></Setter>

        </Style>
        <Style x:Key="styleDataGridCell" BasedOn="{StaticResource styleDataGridCell}" TargetType="{x:Type DataGridCell}">
            <Style.Setters>
                <Setter Property="Padding" Value="5,2,5,2"></Setter>
                <Setter Property="FontSize" Value="14"></Setter>
                <Setter Property="FontWeight" Value="Regular"></Setter>

            </Style.Setters>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsOutOfExpiration}" Value="False"></Condition>
                        <Condition Binding="{Binding Path=IsHoliday}" Value="True"></Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="#FFC0CB"></Setter>
                        <Setter Property="BorderBrush" Value="#FFC0CB"></Setter>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=IsOutOfExpiration}" Value="True">
                    <Setter Property="Background" Value="#A9A9A9"></Setter>
                    <Setter Property="BorderBrush" Value="#A9A9A9"></Setter>
                    <Setter Property="Foreground" Value="Black"></Setter>
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>

                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <Binding Path="(Validation.Errors).CurrentItem.ErrorContent" RelativeSource="{x:Static RelativeSource.Self}" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background"  Value="#FFF0C0" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="styleDataGridCellReadOnly" BasedOn="{StaticResource styleDataGridCell}" TargetType="{x:Type DataGridCell}">
            <Style.Setters>
                <Setter Property="Padding" Value="5,2,5,2"></Setter>
                <Setter Property="FontSize" Value="14"></Setter>
                <Setter Property="FontWeight" Value="Regular"></Setter>
                <Setter Property="Background" Value="#E0E0E0"></Setter>
            </Style.Setters>
        </Style>

        <Style x:Key="resTextBoxWorkTime" BasedOn="{StaticResource resTextBoxCenter}" TargetType="TextBox">
            <Style.Setters>
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="BorderBrush" Value="Transparent"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <TextBox Style="{StaticResource resTextBoxCenter}" Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                     Text="{Binding Path=Text,  UpdateSourceTrigger=LostFocus,  Converter={StaticResource workTimeConverter}, ConverterParameter='00:00', RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}">
                                <i:Interaction.Behaviors>
                                    <local:InputBehavior TextRegex="(\d+:\d+)"></local:InputBehavior>
                                </i:Interaction.Behaviors>
                            </TextBox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="resTextBoxCenter" BasedOn="{StaticResource resTextBoxCenter}" TargetType="TextBox">
            <Style.Setters>
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="BorderBrush" Value="Transparent"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <TextBox Style="{StaticResource resTextBoxCenter}" Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                     Text="{Binding Path=Text,  UpdateSourceTrigger=LostFocus,  Converter={StaticResource dateTimeConverter}, ConverterParameter='00:00', RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}">
                                <i:Interaction.Behaviors>
                                    <local:InputBehavior TextRegex="(\d+:\d+)"></local:InputBehavior>
                                </i:Interaction.Behaviors>
                            </TextBox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="resTextBlockCenter" BasedOn="{StaticResource resTextBlockCenter}" TargetType="TextBlock">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsOutOfExpiration}" Value="False"></Condition>
                        <Condition Binding="{Binding Path=IsHoliday}" Value="True"></Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="#FFC0CB"></Setter>
                        <Setter Property="Background" Value="#FFC0CB"></Setter>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=IsOutOfExpiration}" Value="False">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Style="{StaticResource resMainGrid}">
        <Grid.RowDefinitions>
            <RowDefinition Height="10"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="10"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="10"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="65"></RowDefinition>
                <RowDefinition Height="5"></RowDefinition>
                <RowDefinition Height="120"></RowDefinition>
                <RowDefinition Height="10"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="0"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="10"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="1" Grid.ColumnSpan="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0"></RowDefinition>
                    <RowDefinition Height="25"></RowDefinition>
                    <RowDefinition Height="10"></RowDefinition>
                    <RowDefinition Height="25"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0"></ColumnDefinition>
                    <ColumnDefinition Width="250"></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition Width="70"></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition Width="250"></ColumnDefinition>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="70"></ColumnDefinition>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition Width="70"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="1" Grid.Row="1" x:Name="LblAttendenceTitle_Text" Content="Attendance List" Style="{StaticResource resLabelLeft}"
                       FontFamily="{Binding Path=LblAttendenceTitle.FontFamily}"  FontSize="{Binding Path=LblAttendenceTitle.FontSize}" Padding="0"></Label>
                <Label Grid.Column="3" Grid.Row="1" x:Name="LblAttendenceName_Text" Content="Name:" Style="{StaticResource resLabelCaption}"
                        FontFamily="{Binding Path=LblAttendenceName.FontFamily}" FontSize="{Binding Path=LblAttendenceName.FontSize}" ></Label>
                <Label Grid.Column="3" Grid.Row="3" x:Name="LblAttendencePeriod_Text" Content="Period:" Style="{StaticResource resLabelCaption}"
                        FontFamily="{Binding Path=LblAttendencePeriod.FontFamily}" FontSize="{Binding Path=LblAttendencePeriod.FontSize}" ></Label>
                <Button Grid.Column="5" Grid.Row="3" x:Name="Prev" Content="{Binding Path=LblPrev.Text}" Style="{StaticResource resButtonCommon}" Margin="-1"
                         FontFamily="{Binding Path=LblPrev.FontFamily}" FontSize="{Binding Path=LblPrev.FontSize}" ></Button>
                <Button Grid.Column="9" Grid.Row="3" x:Name="Next" Content="{Binding Path=LblNext.Text}" Style="{StaticResource resButtonCommon}" Margin="-1"
                         FontFamily="{Binding Path=LblNext.FontFamily}" FontSize="{Binding Path=LblNext.FontSize}" ></Button>
                <Grid Grid.Column="5" Grid.Row="1"  Grid.ColumnSpan='3' >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" Grid.Row="0" Text="{Binding Path=EmployeeName}" Style="{StaticResource resTextBoxReadOnly}" Width="Auto" MinWidth="150"
                              FontFamily="{Binding Path=LblEmployeeName.FontFamily}" FontSize="{Binding Path=LblEmployeeName.FontSize}" ></TextBox>
                </Grid>

                <TextBox Grid.Column="7" Grid.Row="3" Text="{Binding Path=Period}" Style="{StaticResource resTextBoxReadOnly}" ></TextBox>
                <Grid Grid.Column="11" Grid.Row="1" Grid.RowSpan="4" Grid.ColumnSpan="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="50"></RowDefinition>

                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition Width="20"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition Width="15"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    

                </Grid>

            </Grid>
            <GroupBox Grid.Column="1" Grid.Row="2" 
                        Header="{Binding Path=LblMessageArea.Text}"
                      FontFamily="{Binding Path=LblMessageArea.FontFamily}"
                      FontSize="{Binding Path=LblMessageArea.FontSize}"
                      >
                <TextBox Text="{Binding Path=Message.Message}" 
                         FontFamily="{Binding Path=LblMessageText.FontFamily}" FontSize="{Binding Path=LblMessageText.FontSize}" 
                         Foreground="{Binding Path=Message.Foreground}"
                         Background="{Binding Path=Message.Background}"
                         Style="{StaticResource resTextBoxMessage}"></TextBox>
            </GroupBox>
            <Grid  Grid.Row="4" Grid.Column="1" >
                <Border BorderThickness="1" BorderBrush="AntiqueWhite">
                    <Grid >
                        <Grid.RowDefinitions>

                            <RowDefinition Height="0"></RowDefinition>

                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="10"></RowDefinition>
                            <RowDefinition Height="50"></RowDefinition>
                            <RowDefinition Height="10"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>


                        </Grid>
                        <Grid Grid.Row="1" Grid.Column="0">

                            <DataGrid  x:Name="dgAttendanceList" ScrollViewer.CanContentScroll="True"  ColumnHeaderHeight="45" RowHeight="25" RowHeaderWidth="0" Style="{StaticResource resBaseDataGrid}"
                                      RowBackground="White" AlternatingRowBackground="Azure" Margin="0,4,0,-4" 
                                      ItemsSource="{Binding Path=WorkDataList}" FrozenColumnCount="5"
                                      SelectionUnit="Cell" CanUserSortColumns="False" SelectionMode="Single"
                                      CellStyle="{StaticResource styleDataGridCell}">
                                <DataGrid.Resources>
                                    <Style TargetType="{x:Type DataGridRow}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsOutOfExpiration}" Value="True">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Setter Property="local:ReadOnlyService.IsReadOnly" Value="True"/>
                                                <Setter Property="IsEnabled" Value="False"></Setter>
                                            </DataTrigger>

                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.Resources>
                                <i:Interaction.Behaviors>
                                    <local:DataGridRowReadOnlyBehavior/>
                                    <local:InputBehavior></local:InputBehavior>
                                    <local:DataGridCopyBeahavior CopyItem="{Binding Path=CopiedWorkDataModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                 PasteItem="{Binding Path=PasteWorkDataModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                 SelectedDataItem="{Binding Path=SelectedWorkData, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                 DeletePath="{Binding Path=DeletePropertyName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                                    </local:DataGridCopyBeahavior>
                                </i:Interaction.Behaviors>
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn SortMemberPath="Work_date_dsp" Width="100"  CellStyle="{StaticResource styleDataGridCellReadOnly}"  IsReadOnly="False">
                                        <DataGridTemplateColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[1], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}">                
                                                </Label>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.HeaderTemplate>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=Work_date_dsp}">
                                                    <Label.Style>
                                                        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource resBaseLabel}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=WorkingDayType}" Value="NationalHoliday">
                                                                    <Setter Property="Foreground" Value="Green"></Setter>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=WorkingDayType}" Value="NormalHoliday">
                                                                    <Setter Property="Foreground" Value="Red"></Setter>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Label.Style>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDoubleClick">
                                                            <cal:ActionMessage MethodName="ChangeWorkDayType">
                                                                <cal:Parameter Value="{Binding}"></cal:Parameter>
                                                            </cal:ActionMessage>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Label>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                       
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Width="70"  CellStyle="{StaticResource styleDataGridCellReadOnly}" IsReadOnly="True"
                                                        Binding="{Binding Path=Start_time, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=False, Converter={StaticResource dateTimeConverter}, ConverterParameter='00:00'}">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[2], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource resGridTextBoxTime}">
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource resTextBlockCenter}">
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="70" CellStyle="{StaticResource styleDataGridCellReadOnly}" IsReadOnly="True"
                                                        Binding="{Binding Path=End_time, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=False, Converter={StaticResource dateTimeConverter}, ConverterParameter='00:00'}">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[3], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource resGridTextBoxTime}">
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource resTextBlockCenter}">
                                            </Style>

                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridComboBoxColumn Width="120" SelectedValueBinding="{Binding Path=Work_type_no, UpdateSourceTrigger=PropertyChanged,  ValidatesOnDataErrors=True}">
                                        <DataGridComboBoxColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[4], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridComboBoxColumn.HeaderTemplate>
                                        <DataGridComboBoxColumn.ElementStyle>
                                            <Style TargetType="ComboBox">
                                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.DayTypeList}"/>

                                                <Setter Property="DisplayMemberPath" Value="ItemValue" />
                                                <Setter Property="SelectedValuePath" Value="ItemCD" />
                                            </Style>
                                        </DataGridComboBoxColumn.ElementStyle>
                                        <DataGridComboBoxColumn.EditingElementStyle>
                                            <Style TargetType="ComboBox">
                                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.DayTypeList}"/>
                                                <Setter Property="DisplayMemberPath" Value="ItemValue" />
                                                <Setter Property="SelectedValuePath" Value="ItemCD" />
                                            </Style>
                                        </DataGridComboBoxColumn.EditingElementStyle>
                                    </DataGridComboBoxColumn>
                                    <DataGridComboBoxColumn Width="120" SelectedValueBinding="{Binding Path=Time_table_no, UpdateSourceTrigger=PropertyChanged,  ValidatesOnDataErrors=True}">
                                        <DataGridComboBoxColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[6], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridComboBoxColumn.HeaderTemplate>
                                        <DataGridComboBoxColumn.ElementStyle>
                                            <Style TargetType="ComboBox">
                                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.TimeTableList}"/>

                                                <Setter Property="DisplayMemberPath" Value="Time_table_name" />
                                                <Setter Property="SelectedValuePath" Value="Time_table_no" />
                                            </Style>
                                        </DataGridComboBoxColumn.ElementStyle>
                                        <DataGridComboBoxColumn.EditingElementStyle>
                                            <Style TargetType="ComboBox">
                                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.TimeTableList}"/>
                                                <Setter Property="DisplayMemberPath" Value="Time_table_name" />
                                                <Setter Property="SelectedValuePath" Value="Time_table_no" />
                                            </Style>
                                        </DataGridComboBoxColumn.EditingElementStyle>
                                    </DataGridComboBoxColumn>
                                    <DataGridTextColumn SortMemberPath="Update_start_time" Width="70" Binding="{Binding Path=Update_start_time, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=False, Converter={StaticResource dateTimeConverter}, ConverterParameter='00:00'}">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[7], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource resGridTextBoxTime}">
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource resTextBlockCenter}">
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn  SortMemberPath="Update_end_time" Width="70" Binding="{Binding Path=Update_end_time, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=False, Converter={StaticResource dateTimeConverter}, ConverterParameter='00:00'}">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[8], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource resGridTextBoxTime}">
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource resTextBlockCenter}">
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn  SortMemberPath="Rest_time" Width="70" Binding="{Binding Path=Rest_time, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=False, Converter={StaticResource workTimeConverter}, ConverterParameter='00:00'}">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[10], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource resGridTextBoxTime}">
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource resTextBlockCenter}">
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn  SortMemberPath="Working_time"  Width="70" Binding="{Binding Path=Working_time, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=False, Converter={StaticResource workTimeConverter}, ConverterParameter='00:00'}">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[13], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource resGridTextBoxTime}">
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource resTextBlockCenter}">
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn   SortMemberPath="Over_time"   Width="70" Binding="{Binding Path=Over_time, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=False, Converter={StaticResource workTimeConverter}, ConverterParameter='00:00'}">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[15], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource resGridTextBoxTime}">
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource resTextBlockCenter}">
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="70"  SortMemberPath="Late_night_time"  Binding="{Binding Path=Late_night_time, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=False, Converter={StaticResource workTimeConverter}, ConverterParameter='00:00'}">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[17], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource resGridTextBoxTime}">
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource resTextBlockCenter}">
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="70"   SortMemberPath="Holiday_time" Binding="{Binding Path=Holiday_time, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=False, Converter={StaticResource workTimeConverter}, ConverterParameter='00:00'}">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[19], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource resGridTextBoxTime}">
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource resTextBlockCenter}">
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="70"   SortMemberPath="Holiday_late_night_time"  Binding="{Binding Path=Holiday_late_night_time, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=False, Converter={StaticResource workTimeConverter}, ConverterParameter='00:00'}">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[21], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource resGridTextBoxTime}">
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource resTextBlockCenter}">
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn    SortMemberPath="Paid_vacation_time"  Width="70" IsReadOnly="True" CellStyle="{StaticResource styleDataGridCellReadOnly}"
                                                           Binding="{Binding Path=Paid_vacation_time, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=False, Converter={StaticResource workTimeConverter}, ConverterParameter='00:00'}">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[23], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource resTextBlockCenter}">
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn SortMemberPath="Being_late_time"  Width="70" Binding="{Binding Path=Being_late_time, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=False, Converter={StaticResource workTimeConverter}, ConverterParameter='00:00'}">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[25], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource resGridTextBoxTime}">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource resTextBlockCenter}">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn SortMemberPath="Leaving_early_time"  Width="70" Binding="{Binding Path=Leaving_early_time, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=False, Converter={StaticResource workTimeConverter}, ConverterParameter='00:00'}">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[27], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource resGridTextBoxTime}">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource resTextBlockCenter}">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="350"  SortMemberPath="Memo" Binding="{Binding Path=Memo, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=False}">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Label Content="{Binding Path=DataContext.HeaderText[28], RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={x:Type UserControl}}}" Style="{StaticResource resLabelGridHeader}"></Label>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource resTextBoxLeft}">
                                                <Setter Property="MaxLength" Value="5"/>
                                                <Setter Property="TextAlignment" Value="Left"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource resTextBlockLeft}">
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>

                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                        <Grid Grid.Column="7" Grid.Row="3" Grid.ColumnSpan="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="50"></RowDefinition>

                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="20"></ColumnDefinition>
                                <ColumnDefinition Width="160"></ColumnDefinition>
                                <ColumnDefinition Width="10"></ColumnDefinition>
                                <ColumnDefinition Width="140"></ColumnDefinition>
                                <ColumnDefinition Width="10"></ColumnDefinition>
                                <ColumnDefinition Width="100"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="2" Grid.Row="1" x:Name="PersonalExport" Content="{Binding Path=LblPersonalExport.Text}" Style="{StaticResource resButtonCommon}" ></Button>
                            <Button Grid.Column="4" Grid.Row="1" x:Name="Save" Content="{Binding Path=LblUpdate.Text}" Style="{StaticResource resButtonCommon}" ></Button>
                            <Button Grid.Column="6" Grid.Row="1" x:Name="Cancel" Content="{Binding Path=LblCancel.Text}" Style="{StaticResource resButtonCommon}" ></Button>
                        </Grid>
                    </Grid>

                </Border>

            </Grid>

        </Grid>
    </Grid>
</UserControl>
